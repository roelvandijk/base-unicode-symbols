name:          base-unicode-symbols
version:       0.2.2.3
cabal-version: >=1.6
build-type:    Simple
stability:     provisional
tested-with:   GHC ==6.8.1, GHC ==6.10.1, GHC ==6.12.1, GHC ==6.12.3, GHC ==7.0.1, GHC ==7.0.3, GHC ==7.2.1
author:        Roel van Dijk <vandijk.roel@gmail.com>
maintainer:    Roel van Dijk <vandijk.roel@gmail.com>
copyright:     2009â€“2011 Roel van Dijk <vandijk.roel@gmail.com>
license:       BSD3
license-file:  LICENSE
category:
homepage:      http://haskell.org/haskellwiki/Unicode-symbols
bug-reports:   https://github.com/roelvandijk/base-unicode-symbols/issues
synopsis:      Unicode alternatives for common functions and operators
description:
  This package defines new symbols for a number of functions,
  operators and types in the base package.
  .
  All symbols are documented with their actual definition and
  information regarding their Unicode code point. They should be
  completely interchangeable with their definitions.
  .
  For further Unicode goodness you can enable the @UnicodeSyntax@
  language extension \[1\]. This extension enables Unicode characters
  to be used to stand for certain ASCII character sequences,
  i.e. &#x2192; instead of @->@, &#x2200; instead of @forall@ and many
  others.
  .
  Original idea by P&#xE9;ter Divi&#xE1;nszky.
  .
  \[1\] <http://www.haskell.org/ghc/docs/latest/html/users_guide/syntax-extns.html#unicode-syntax>

extra-source-files: LICENSE, README.markdown

source-repository head
  type:     git
  location: git://github.com/roelvandijk/base-unicode-symbols.git

flag old-base
  description: Support for base < 3.0.3.1
  default: False

library
  if flag(old-base)
    build-depends: base >= 3.0 && < 3.0.3.1
  else
    build-depends: base >= 3.0.3.1 && < 5
    exposed-modules: Control.Category.Unicode
  exposed-modules: Control.Applicative.Unicode
                 , Control.Arrow.Unicode
                 , Control.Monad.Unicode
                 , Data.Bool.Unicode
                 , Data.Eq.Unicode
                 , Data.Foldable.Unicode
                 , Data.Function.Unicode
                 , Data.List.Unicode
                 , Data.Monoid.Unicode
                 , Data.Ord.Unicode
                 , Prelude.Unicode

